[
  {
    "code": 1,
    "type": "API_INVARIANT",
    "messagePattern": "Invoked Replicant.createZone() but zones are not enabled."
  },
  {
    "code": 2,
    "type": "INVARIANT",
    "messagePattern": "Invoked Replicant.activateZone() but zones are not enabled."
  },
  {
    "code": 3,
    "type": "INVARIANT",
    "messagePattern": "Invoked Replicant.deactivateZone() but zones are not enabled."
  },
  {
    "code": 4,
    "type": "API_INVARIANT",
    "messagePattern": "Attempted to deactivate zone that is not active."
  },
  {
    "code": 5,
    "type": "INVARIANT",
    "messagePattern": "Invoked Replicant.currentZone() but zones are not enabled."
  },
  {
    "code": 6,
    "type": "INVARIANT",
    "messagePattern": "Invoked deregisterConnector for schema named '%s' but no Connector for specified schema exists."
  },
  {
    "code": 7,
    "type": "INVARIANT",
    "messagePattern": "Unable to locate Connector by schemaId %s"
  },
  {
    "code": 9,
    "type": "API_INVARIANT",
    "messagePattern": "Entity.getName() invoked when Replicant.areNamesEnabled() is false"
  },
  {
    "code": 11,
    "type": "INVARIANT",
    "messagePattern": "Response message specified requestId '%s' but request specified requestId '%s'."
  },
  {
    "code": 12,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage.getEntityChanges() invoked when no changes are present. Should guard call with UpdateMessage.hasEntityChanges()."
  },
  {
    "code": 13,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage.getChannels() invoked when no changes are present. Should guard call with UpdateMessage.hasChannels()."
  },
  {
    "code": 14,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage contains multiple EntityChange messages with the id '%s'."
  },
  {
    "code": 15,
    "type": "INVARIANT",
    "messagePattern": "Invoked registerConnector for system schema named '%s' but a Connector for specified schema exists."
  },
  {
    "code": 16,
    "type": "API_INVARIANT",
    "messagePattern": "Invoked updateAreaOfInterest for channel at address %s with status %s but failed to supply the expected error."
  },
  {
    "code": 17,
    "type": "API_INVARIANT",
    "messagePattern": "Invoked updateAreaOfInterest for channel at address %s with status %s and supplied an unexpected error."
  },
  {
    "code": 19,
    "type": "API_INVARIANT",
    "messagePattern": "Invoked updateAreaOfInterest for channel at address %s with status %s and found unexpected subscription in the context."
  },
  {
    "code": 20,
    "type": "INVARIANT",
    "messagePattern": "Invoked convergeAreaOfInterest() with disposed AreaOfInterest."
  },
  {
    "code": 21,
    "type": "API_INVARIANT",
    "messagePattern": "Attempting to get Spy but spies are not enabled."
  },
  {
    "code": 22,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage contains multiple ChannelChange messages for the channel %s."
  },
  {
    "code": 23,
    "type": "INVARIANT",
    "messagePattern": "Connection.completeAreaOfInterestRequest() invoked when there is no current AreaOfInterest requests."
  },
  {
    "code": 24,
    "type": "INVARIANT",
    "messagePattern": "Connection.lastIndexOfPendingAreaOfInterestRequest passed a REMOVE request for address '%s' with a non-null filter '%s'."
  },
  {
    "code": 25,
    "type": "INVARIANT",
    "messagePattern": "Connection.isAreaOfInterestRequestPending passed a REMOVE request for address '%s' with a non-null filter '%s'."
  },
  {
    "code": 27,
    "type": "INVARIANT",
    "messagePattern": "AreaOfInterestRequest constructor passed a REMOVE request for address '%s' with a non-null filter '%s'."
  },
  {
    "code": 28,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage contains multiple ChannelChange messages for the channel %s."
  },
  {
    "code": 29,
    "type": "INVARIANT",
    "messagePattern": "Subscription.getInstanceRoot() invoked on subscription for channel %s but channel is not instance based."
  },
  {
    "code": 30,
    "type": "API_INVARIANT",
    "messagePattern": "UpdateMessage.getFilteredChannels() invoked when no changes are present. Should guard call with UpdateMessage.hasFilteredChannels()."
  },
  {
    "code": 31,
    "type": "INVARIANT",
    "messagePattern": "Connector.ensureConnection() when no connection is present."
  },
  {
    "code": 32,
    "type": "API_INVARIANT",
    "messagePattern": "Entity passed a name '%s' but Replicant.areNamesEnabled() is false"
  },
  {
    "code": 33,
    "type": "INVARIANT",
    "messagePattern": "Received ChannelChange of type UPDATE for address %s but no such subscription exists."
  },
  {
    "code": 34,
    "type": "INVARIANT",
    "messagePattern": "Connector.removeExplicitSubscriptions() invoked with request with type that is not REMOVE. Request: AreaOfInterestRequest[Type=%s Address=%s]"
  },
  {
    "code": 36,
    "type": "API_INVARIANT",
    "messagePattern": "Attempting to call AbstractSpyEventProcessor.on() to register a processor for type class %s but an existing processor already exists for type"
  },
  {
    "code": 37,
    "type": "INVARIANT",
    "messagePattern": "ReplicantService passed a context but Replicant.areZonesEnabled() is false"
  },
  {
    "code": 38,
    "type": "INVARIANT",
    "messagePattern": "Attempting to report SpyEvent '%s' but willPropagateSpyEvents() returns false."
  },
  {
    "code": 39,
    "type": "API_INVARIANT",
    "messagePattern": "Attempting to remove handler %s that is not in the list of spy handlers."
  },
  {
    "code": 40,
    "type": "API_INVARIANT",
    "messagePattern": "Attempting to add handler %s that is already in the list of spy handlers."
  },
  {
    "code": 41,
    "type": "INVARIANT",
    "messagePattern": "RequestEntry passed a name '%s' but Replicant.areNamesEnabled() is false"
  },
  {
    "code": 43,
    "type": "API_INVARIANT",
    "messagePattern": "RequestEntry.getName() invoked when Replicant.areNamesEnabled() is false"
  },
  {
    "code": 44,
    "type": "API_INVARIANT",
    "messagePattern": "ChannelSchema.getName() invoked when Replicant.areNamesEnabled() is false"
  },
  {
    "code": 45,
    "type": "API_INVARIANT",
    "messagePattern": "ChannelSchema passed a name '%s' but Replicant.areNamesEnabled() is false"
  },
  {
    "code": 46,
    "type": "INVARIANT",
    "messagePattern": "Request to unsubscribe from channel at address %s but not subscribed to channel."
  },
  {
    "code": 47,
    "type": "INVARIANT",
    "messagePattern": "Request to unsubscribe from channel at address %s but subscription is not an explicit subscription."
  },
  {
    "code": 48,
    "type": "INVARIANT",
    "messagePattern": "Request to update channel at address %s but not subscribed to channel."
  },
  {
    "code": 49,
    "type": "API_INVARIANT",
    "messagePattern": "EntitySchema passed a name '%s' but Replicant.areNamesEnabled() is false"
  },
  {
    "code": 50,
    "type": "API_INVARIANT",
    "messagePattern": "EntitySchema.getName() invoked when Replicant.areNamesEnabled() is false"
  },
  {
    "code": 51,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema passed a name '%s' but Replicant.areNamesEnabled() is false"
  },
  {
    "code": 52,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema.getName() invoked when Replicant.areNamesEnabled() is false"
  },
  {
    "code": 53,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema named '%s' passed an array of entities that has a null element"
  },
  {
    "code": 54,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema named '%s' passed an array of entities where entity at index %s does not have id matching index."
  },
  {
    "code": 55,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema named '%s' passed an array of channels that has a null element"
  },
  {
    "code": 56,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema named '%s' passed an array of channels where channel at index %s does not have id matching index."
  },
  {
    "code": 57,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema.getEntity(id) passed an id that is out of range."
  },
  {
    "code": 58,
    "type": "API_INVARIANT",
    "messagePattern": "SystemSchema.getChannel(id) passed an id that is out of range."
  },
  {
    "code": 59,
    "type": "INVARIANT",
    "messagePattern": "Unable to locate SystemSchema with id %s"
  },
  {
    "code": 60,
    "type": "INVARIANT",
    "messagePattern": "unlinkSubscription invoked with address %s but no subscription with that address exists."
  },
  {
    "code": 61,
    "type": "INVARIANT",
    "messagePattern": "unlinkSubscription invoked with address %s but subscription has not already been disposed."
  },
  {
    "code": 62,
    "type": "INVARIANT",
    "messagePattern": "unlinkSubscription invoked with address %s but no subscription with that address exists."
  },
  {
    "code": 63,
    "type": "INVARIANT",
    "messagePattern": "unlinkSubscription invoked with address %s but subscription has not already been disposed."
  },
  {
    "code": 64,
    "type": "API_INVARIANT",
    "messagePattern": "createSubscription invoked with address %s but a subscription with that address already exists."
  },
  {
    "code": 65,
    "type": "FAIL",
    "messagePattern": "Entity failed to verify during validation process. Entity = MyEntity/1"
  },
  {
    "code": 66,
    "type": "API_INVARIANT",
    "messagePattern": "Unable to locate request with id '%s' specified by message. Existing Requests: {%s}"
  },
  {
    "code": 67,
    "type": "INVARIANT",
    "messagePattern": "Attempted to remove request with id %s from connection with id '%s' but no such request exists."
  },
  {
    "code": 69,
    "type": "INVARIANT",
    "messagePattern": "UpdateMessage contained an EntityChange message referencing channel %s but no such subscription exists locally."
  },
  {
    "code": 70,
    "type": "INVARIANT",
    "messagePattern": "Attempted to register schema with id %s when a schema with id already exists: %s"
  },
  {
    "code": 71,
    "type": "API_INVARIANT",
    "messagePattern": "Entity.getUserObject() invoked when no userObject present"
  },
  {
    "code": 76,
    "type": "API_INVARIANT",
    "messagePattern": "ChannelSchema %s has a DYNAMIC filterType but has supplied no filter."
  },
  {
    "code": 77,
    "type": "API_INVARIANT",
    "messagePattern": "ChannelSchema %s does not have a DYNAMIC filterType but has supplied a filter."
  },
  {
    "code": 78,
    "type": "INVARIANT",
    "messagePattern": "Received ChannelChange of type %s for address %s but the channel does not have a DYNAMIC filter."
  },
  {
    "code": 79,
    "type": "INVARIANT",
    "messagePattern": "Connector.updateSubscriptionForFilteredEntities invoked for address %s but the channel does not have a DYNAMIC filter."
  },
  {
    "code": 80,
    "type": "INVARIANT",
    "messagePattern": "Entity.linkToSubscription invoked on Entity %s passing subscription %s but entity is already linked to subscription."
  },
  {
    "code": 81,
    "type": "INVARIANT",
    "messagePattern": "Entity.delinkFromSubscription invoked on Entity %s passing subscription %s but entity is not linked to subscription."
  },
  {
    "code": 82,
    "type": "INVARIANT",
    "messagePattern": "Connector.requestSubscriptionUpdate invoked for channel %s but channel does not have a dynamic filter."
  },
  {
    "code": 83,
    "type": "INVARIANT",
    "messagePattern": "Attempting to update channel %s but channel does not allow dynamic updates of filter and channel has not been explicitly subscribed."
  },
  {
    "code": 85,
    "type": "INVARIANT",
    "messagePattern": "Attempted to deregister schema with id %s but no such schema exists."
  },
  {
    "code": 87,
    "type": "INVARIANT",
    "messagePattern": "Subscription.getInstanceRoot() invoked on subscription for channel %s but channel has not supplied expected id."
  },
  {
    "code": 88,
    "type": "INVARIANT",
    "messagePattern": "Subscription.getInstanceRoot() invoked on subscription for channel %s but entity is not present."
  },
  {
    "code": 93,
    "type": "API_INVARIANT",
    "messagePattern": "Called attach() passing an areaOfInterest that is disposed. AreaOfInterest: AreaOfInterest[%s]"
  },
  {
    "code": 94,
    "type": "API_INVARIANT",
    "messagePattern": "Called attach() passing an areaOfInterest that is already attached to the container. AreaOfInterest: AreaOfInterest[%s]"
  }
]
